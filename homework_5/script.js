"use strict";

// 1. –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é sumTo(n), –∫–æ—Ç–æ—Ä–∞—è –≤—ã—á–∏—Å–ª—è–µ—Ç —Å—É–º–º—É —á–∏—Å–µ–ª 1 + 2 + ... + n.

// –î–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∫—É—Ä—Å–∏—é.

// sumTo(1) = 1
// sumTo(2) = 2 + 1 = 3
// sumTo(3) = 3 + 2 + 1 = 6
// –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏:

console.log(sumTo(4)); // 10
console.log(sumTo(3)); // 6


// // 2. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é capitalizeFirstLetter , –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å—Ç—Ä–æ–∫—É. 
// // –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, –≥–¥–µ –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª –±—É–¥–µ—Ç —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã
// function capitalizeFirstLetter(str) {
//   let newStr = str[0]. toUpperCase() + str.slice(1);
//   return newStr;
// }

// console.log(capitalizeFirstLetter("hello")); // Hello
// console.log(capitalizeFirstLetter("HELLO")); // HELLO
// console.log(capitalizeFirstLetter("hElLo")); // HElLo 


// 3. –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é truncate(str, maxlength), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–ª–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ str –∏, 
// –µ—Å–ª–∏ –æ–Ω–∞ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–∏—Ç maxlength, –∑–∞–º–µ–Ω—è–µ—Ç –∫–æ–Ω–µ—Ü str –Ω–∞ "‚Ä¶", 
// —Ç–∞–∫, —á—Ç–æ–±—ã –µ—ë –¥–ª–∏–Ω–∞ —Å—Ç–∞–ª–∞ —Ä–∞–≤–Ω–∞ maxlength. 

// function truncate(str, maxlength) {
//   if (str.length > maxlength) {
//     return str.slice(0, maxlength) + '...';
//   } else {
//     return str;
//   }
// }
// console.log(truncate("Hello world", 5)); // Hello...
// console.log(truncate("Hello world", 25)); // Hello world 


// 4. –ï—Å—Ç—å –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.
// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—ã –ø–æ—Å—á–∏—Ç–∞–ª–∞ —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª –∫–∞–∂–¥–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ 
// –∏ –¥–æ–±–∞–≤–∏–ª–∞ –∫–ª—é—á averageMark –∫ –∫–∞–∂–¥–æ–º—É —Å—Ç—É–¥–µ–Ω—Ç—É –≤ –º–∞—Å—Å–∏–≤–µ. 

const students = [
    {
        name: 'John Smith',
        marks: [10, 8, 6, 9, 8, 7 ]
    },
    {
        name: 'John Doe',
        marks: [ 9, 8, 7, 6, 7 ]
    },
    {
        name: 'Thomas Anderson',
        marks: [6, 7, 10, 8 ]
    },
    {
        name: 'Jean-Baptiste Emanuel Zorg',
        marks: [10, 9, 8, 9 ]
    }
]
students.forEach(student => {
  //console.log(student.marks);
  const sumOfMarks = student.marks.reduce((sum, marks) => sum + marks, 0);

  const averageMark = sumOfMarks / student.marks.length;
  
  student.averageMark = averageMark;
});

console.log(students);


// 5. –î–∞–Ω–Ω –º–∞—Å—Å–∏–≤ vehicles. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–∞–ª–∏–∑—É–µ—Ç –ø–æ–¥—Å—á–µ—Ç 
//—Å—Ä–µ–¥–Ω–µ–π —Ü–µ–Ω—ã –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Ç–∏–ø–∞ SUV:
// –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –ø–æ–ª–µ type –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–æ –≤ –ª—é–±–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ —Å–∏–º–≤–æ–ª–æ–≤ (suv, SUV).
// –î–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã –º–∞—Å—Å–∏–≤–æ–≤ (–∞ –Ω–µ –æ–±—ã—á–Ω—ã–µ —Ü–∏–∫–ª—ã)

const vehicles = [
  { make: 'Honda', model: 'CR-V', type: 'suv', price: 24045 },
  { make: 'Honda', model: 'Accord', type: 'sedan', price: 22455 },
  { make: 'Mazda', model: 'Mazda 6', type: 'sedan', price: 24195 },
  { make: 'Mazda', model: 'CX-9', type: 'suv', price: 31520 },
  { make: 'Toyota', model: '4Runner', type: 'suv', price: 34210 },
  { make: 'Toyota', model: 'Sequoia', type: 'SUV', price: 45560 },
  { make: 'Toyota', model: 'Tacoma', type: 'truck', price: 24320 },
  { make: 'Ford', model: 'F-150', type: 'truck', price: 27110 },
  { make: 'Ford', model: 'Fusion', type: 'sedan', price: 22120 },
  { make: 'Ford', model: 'Explorer', type: 'SUV', price: 31660 }
];

let vehiclesType = vehicles.filter(vehicle => vehicle.type.toUpperCase() === "SUV");
let result = vehiclesType.reduce((sum, vehiclesType) => sum + vehiclesType.price, 0);
let average = result / vehiclesType.length;

console.log(vehiclesType);
console.log(result);
console.log(average);

// 6. –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é getKeysCount(obj), –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–∞.
// –ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Å–¥–µ–ª–∞—Ç—å –∫–æ–¥ –∫–∞–∫ –º–æ–∂–Ω–æ –∫–æ—Ä–æ—á–µ.
// –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –∏–¥–µ–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ 1 —Å—Ç—Ä–æ–∫—É üôÇ

// let getKeysCount = obj => Object.keys(obj).length;

// console.log(getKeysCount({ name: 'John' })); // 1
// console.log(getKeysCount({ name: 'John', age: 22 })); // 2
// console.log(getKeysCount({ name: 'John', salary: null })); // 2

// 7.* –£ –Ω–∞—Å –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª arr. –ù—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–æ–ø–∏—é, 
// –Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å arr –Ω–µ–∏–∑–º–µ–Ω—ë–Ω–Ω—ã–º. 
// –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é copySorted(arr), –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ç–∞–∫—É—é –∫–æ–ø–∏—é.

function copySorted(arr) {
    return arr.slice().sort((a, b) => a - b);     
}

let arr = [10, 20, 3, 4, 0, 99, 97];
let sorted = copySorted(arr);
console.log(arr); // [10, 20, 3, 4, 0, 99, 97] - –º–∞—Å—Å–∏–≤ –Ω–µ –¥–æ–ª–∂–µ–Ω –∏–∑–º–µ–Ω–∏—Ç—Å—è!
console.log(sorted); // [0, 3, 4, 10, 20, 97, 99]

console.log('new feature is homework_5');